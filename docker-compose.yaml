version: "3"
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: "postgres:13"
    volumes: 
      - "pgdata:/var/lib/postgresql/data"
    ports: 
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crawler
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres && psql --username=postgres --list"]
      interval: 10s
      timeout: 5s
      retries: 5
  elasticsearch:
    image: "elasticsearch:8.1.1"
    ports: 
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
  crawler:
    build: ./crawler
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./crawler/.env.compose
  keywords:
    build: ./keywords
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./keywords/.env.compose
    restart: always
  indexer:
    build: ./indexer
    depends_on:
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports: 
      - 50051:50051
    env_file:
      - ./indexer/.env.compose
  api:
    build: ./api
    depends_on:
      indexer:
        condition: service_started
    ports: 
      - 8081:8081
    env_file:
      - ./api/.env.compose
    
  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env.compose


volumes: 
  pgdata:
